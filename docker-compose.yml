version: "3"

services:

  frontend:
    image: creditrama-d-frontend:0.0.2-SNAPSHOT
    container_name: frontend
    ports:
      - 3000:80

  client:
    image: creditrama-d-client-service:0.0.2-SNAPSHOT
    container_name: client
    ports:
      - 8080:8080
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: creditrama_client
      AUTHORIZATION_HOST: authorization
      BANKACCOUNT_HOST: bankaccount
      KAFKA_BROKER: kafka

  bankaccount:
    image: creditrama-d-bankaccount-service:0.0.2-SNAPSHOT
    container_name: bankaccount
    ports:
      - 8083:8083
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: creditrama_accounts
      AUTHORIZATION_HOST: authorization
      KAFKA_BROKER: kafka

  transaction:
    image: creditrama-d-transaction-service:0.0.2-SNAPSHOT
    container_name: transaction
    ports:
      - 8084:8084
    environment:
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      #      MONGO_USER: postgres
      #      MONGO_PASSWORD: docker
      MONGO_DB: transactions_db
      AUTHORIZATION_HOST: authorization
      BANKACCOUNT_HOST: bankaccount
      KAFKA_BROKER: kafka

  authorization:
    image: creditrama-d-authorization-service:0.0.2-SNAPSHOT
    container_name: authorization
    ports:
      - 9191:9191
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: creditrama_client
      KAFKA_BROKER: kafka

  notification:
    image: creditrama-d-notification-service:0.0.2-SNAPSHOT
    container_name: notification
    ports:
      - 8081:8081
    environment:
      KAFKA_BROKER: kafka

  demo:
    image: creditrama-d-demo-scenario:0.0.2-SNAPSHOT
    container_name: demo-scenario
    depends_on:
      - client
      - authorization
    environment:
      CLIENT_HOST: http://client:8080
      AUTHORIZATION_HOST: http://authorization:9191

  postgres:
    image: postgres:12-alpine
    container_name: postgres
    ports:
      - 5432:5432
    volumes:
      - ./pg-init-scripts:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
      POSTGRES_MULTIPLE_DATABASES: creditrama_client,creditrama_accounts,creditrama_cards

  mongo:
    image: mongo:3.6.15
    ports:
      - 27017:27017
    container_name: mongo

  zookeeper:
    image: confluentinc/cp-zookeeper:5.3.1
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    container_name: zookeeper

  kafka:
    image: confluentinc/cp-kafka:5.3.1
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CREATE_TOPICS: 'CreditRama.SendNotif:1:1'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:29092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - 9092:9092
      - 29092:29092
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    container_name: kafka

  start_dependencies_kafka_database:
    image: dadarek/wait-for-dependencies:0.2
    depends_on:
      - zookeeper
      - kafka
      - postgres
      - mongo
    command: zookeeper:2181 kafka:9092 postgres:5432 mongo:27017
    container_name: start_dependencies_kafka_database

  start_dependencies_spring:
    image: dadarek/wait-for-dependencies:0.2
    depends_on:
      - bankaccount
      - client
      - authorization
      - notification
      - transaction
    command: bankaccount:8083 client:8080 authorization:9191 notification:8081 transaction:8084
    container_name: start_dependencies_spring
    environment:
      SLEEP_LENGTH: 10
